{"version":3,"sources":["api/api.js","Shapes/Shapes.js","components/AddForm/AddForm.js","components/TodoItem/TodoItem.js","components/TodosFilter/TodosFilter.js","components/TodoList/TodoList.js","components/NavFiltersLink/NavFiltersLink.js","components/TodoMenu/TodoMenu.js","components/CompleteAllCheckbox/CompleteAllCheckbox.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["todos","id","uuidv4","title","isCompleted","TodoShapes","PropTypes","string","isRequired","bool","AddForm","arrayOf","shape","func","number","pathname","search","hash","state","onChange","event","value","target","setState","taskTitle","replace","onSubmit","preventDefault","props","addTodo","reset","this","className","placeholder","React","Component","TodoItem","isEdit","editedTitle","editId","tempTitle","inputFocus","createRef","onDoubleClick","taskId","prevState","editingTitle","onBlurInput","changeTodo","onKeyPressed","deleteTodo","keyCode","trim","current","focus","completeTodo","classnames","completed","editing","type","checked","htmlFor","onClick","onBlur","onKeyUp","ref","TodosFilter","filteredTodos","filter","todo","map","key","TodoList","location","NavFiltersLink","exact","to","activeClassName","TodoMenu","activeTasks","clearCompleted","completedTasks","CompleteAllCheckbox","completeAll","TodoApp","allCompleted","every","newTodo","changeCompletement","checkCompletement","taskCounter","isComplited","counter","forEach","newTitle","localState","JSON","parse","localStorage","getItem","setItem","stringify","activeTaskQuantity","completedTaskQuantity","taskQuantity","length","path","render","App","basename","todosFromServer","ReactDOM","document","getElementById"],"mappings":"8QAEaA,EAAQ,CACnB,CACEC,GAAIC,cACJC,MAAO,iBACPC,aAAa,GAEf,CACEH,GAAIC,cACJC,MAAO,YACPC,aAAa,GAEf,CACEH,GAAIC,cACJC,MAAO,YACPC,aAAa,GAEf,CACEH,GAAIC,cACJC,MAAO,iBACPC,aAAa,GAEf,CACEH,GAAIC,cACJC,MAAO,iBACPC,aAAa,I,sECxBJC,EAAa,CACxBJ,GAAIK,IAAUC,OAAOC,WACrBL,MAAOG,IAAUC,OAAOC,WACxBJ,YAAaE,IAAUG,KAAKD,YCFjBE,GDMJJ,IAAUK,QAAQL,IAAUM,MACjCP,IACCG,WAIMF,IAAUO,KAAKL,WAIjBF,IAAUK,QAAQL,IAAUM,MACjCP,IACCG,WACSF,IAAUO,KAAKL,WACbF,IAAUO,KAAKL,WACnBF,IAAUC,OAAOC,WAIdF,IAAUQ,OAAON,WACdF,IAAUO,KAAKL,WACfF,IAAUQ,OAAON,WAIpBF,IAAUO,KAAKL,WAIrBF,IAAUK,QAAQL,IAAUM,MACjCP,IACCG,WACSF,IAAUO,KAAKL,WACbF,IAAUO,KAAKL,WACnBF,IAAUM,MAAM,CACxBG,SAAUT,IAAUC,OAAOC,WAC3BQ,OAAQV,IAAUC,OAAOC,WACzBS,KAAMX,IAAUC,OAAOC,aACtBA,WC5CL,4MACEU,MAAQ,GADV,EAGEC,SAAW,SAACC,GAAW,IACbC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZC,UAAWH,EAAMI,QAAQ,sBAAuB,OAPtD,EAWEC,SAAW,SAACN,GACVA,EAAMO,iBAEF,EAAKT,MAAMM,YACb,EAAKI,MAAMC,QAAQ,EAAKX,MAAMM,WAC9BJ,EAAME,OAAOQ,UAhBnB,uDAqBI,OACE,0BAAMJ,SAAUK,KAAKL,UACnB,2BACEM,UAAU,WACVC,YAAY,yBACZd,SAAUY,KAAKZ,gBA1BzB,GAA6Be,IAAMC,Y,iBCEtBC,EAAb,4MACElB,MAAO,CACLmB,QAAQ,EACRC,YAAa,EAAKV,MAAMzB,MACxBoC,OAAQ,KACRC,UAAW,EAAKZ,MAAMzB,OAL1B,EAQEsC,WAAaP,IAAMQ,YARrB,EAgBEC,cAAgB,SAACvB,GACf,IAAMwB,EAASxB,EAAME,OAAOrB,GAE5B,EAAKsB,UAAS,SAAAsB,GAAS,MAAK,CAC1BR,QAASQ,EAAUR,OACnBE,OAAQK,EACRJ,UAAWK,EAAUC,kBAtB3B,EA0BEC,YAAc,WAAO,IAAD,EACc,EAAK7B,MAA7BqB,EADU,EACVA,OAAQD,EADE,EACFA,YAEhB,EAAKV,MAAMoB,WAAWT,EAAQD,GAC9B,EAAKf,UAAS,SAAAsB,GAAS,MAAK,CAC1BC,aAAcD,EAAUL,UACxBH,QAAQ,OAhCd,EAoCES,aAAe,SAAC1B,GAAW,IACjBC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZe,YAAajB,EAAMI,QAAQ,sBAAuB,OAxCxD,EA4CEwB,aAAe,SAAC7B,GAAW,IAAD,EACQ,EAAKF,MAA7BqB,EADgB,EAChBA,OAAQD,EADQ,EACRA,YACRY,EAAe,EAAKtB,MAApBsB,WAEc,KAAlB9B,EAAM+B,UACHb,GAAsC,KAAvBA,EAAYc,QAC9BF,EAAWX,GAGb,EAAKX,MAAMoB,WAAWT,EAAQD,GAC9B,EAAKS,eAGe,KAAlB3B,EAAM+B,SACR,EAAKJ,eA1DX,mEAWQhB,KAAKU,YACPV,KAAKU,WAAWY,QAAQC,UAZ9B,+BA8DY,IAAD,EAOHvB,KAAKH,MALPzB,EAFK,EAELA,MACAF,EAHK,EAGLA,GACAG,EAJK,EAILA,YACA8C,EALK,EAKLA,WACAK,EANK,EAMLA,aAGMjB,EAAgBP,KAAKb,MAArBoB,YAER,OACE,oCACE,wBACEN,UAAWwB,IAAW,CACpBC,UAAWrD,EAAasD,QAAS3B,KAAKb,MAAMmB,UAG9C,yBAAKL,UAAU,QACb,2BACE2B,KAAK,WACL3B,UAAU,SACV/B,GAAIA,EACJkB,SAAU,kBAAMoC,EAAatD,IAC7B2D,QAASxD,IAEX,2BACEH,GAAIA,EACJ0C,cAAeZ,KAAKY,cACpBkB,QAAO,eAAU5D,IAEhBE,GAEH,4BACE2D,QAAS,kBAAMZ,EAAWjD,IAC1B0D,KAAK,SACL3B,UAAU,UACV/B,GAAIA,KAGR,2BACEoB,MAAOiB,EACPyB,OAAQhC,KAAKgB,YACb5B,SAAUY,KAAKe,aACfkB,QAASjC,KAAKkB,aACdU,KAAK,OACL3B,UAAU,OACV/B,GAAIA,EACJgE,IAAKlC,KAAKU,mBA9GtB,GAA8BP,IAAMC,WCDvB+B,EAAc,SAAC,GAMrB,IALLlE,EAKI,EALJA,MACAkD,EAII,EAJJA,WACAK,EAGI,EAHJA,aACAxC,EAEI,EAFJA,SACAiC,EACI,EADJA,WAEM5C,EAA2B,YAAbW,EAEdoD,EAAgBnE,EAAMoE,QAAO,SAAAC,GAAI,OAAIA,EAAKjE,cAAgBA,KAEhE,OACE,oCACG+D,EAAcG,KAAI,SAAAD,GAAI,OACrB,kBAAC,EAAD,CACEE,IAAKF,EAAKpE,GACViD,WAAYA,EACZ/C,MAAOkE,EAAKlE,MACZF,GAAIoE,EAAKpE,GACT+C,WAAYA,EACZO,aAAcA,EACdnD,YAAaiE,EAAKjE,mBClBfoE,EAAW,SAAC,GAMlB,IALLxE,EAKI,EALJA,MACAkD,EAII,EAJJA,WACAK,EAGI,EAHJA,aACAkB,EAEI,EAFJA,SACAzB,EACI,EADJA,WAEQjC,EAAa0D,EAAb1D,SAER,OACE,wBAAIiB,UAAU,aACE,MAAbjB,EACGf,EAAMsE,KAAI,SAAAD,GAAI,OACd,kBAAC,EAAD,CACEE,IAAKF,EAAKpE,GACV+C,WAAYA,EACZE,WAAYA,EACZ/C,MAAOkE,EAAKlE,MACZF,GAAIoE,EAAKpE,GACTsD,aAAcA,EACdnD,YAAaiE,EAAKjE,iBAIpB,kBAAC,EAAD,CACEJ,MAAOA,EACPkD,WAAYA,EACZK,aAAcA,EACdP,WAAYA,EACZjC,SAAUA,MC/BT2D,EAAiB,kBAC5B,wBAAI1C,UAAU,WACZ,4BACE,kBAAC,IAAD,CAAS2C,OAAK,EAACC,GAAG,IAAIC,gBAAgB,YAAtC,QAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,UAAUC,gBAAgB,YAAtC,WAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,aAAaC,gBAAgB,YAAzC,gBCVOC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,eAAhC,OACtB,oCACE,0BAAMjD,UAAU,cAAhB,UACM+C,EADN,gBAIA,kBAAC,EAAD,QACGE,GAEC,4BACEnB,QAASkB,EACTrB,KAAK,SACL3B,UAAU,mBAHZ,qBCVKkD,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACjC,oCACE,2BACExB,KAAK,WACL1D,GAAG,aACH+B,UAAU,aACVb,SAAUgE,IAEZ,2BAAOtB,QAAQ,cAAf,0BCDSuB,EAAb,4MACElE,MAAQ,CACNlB,MAAO,GACPqF,aAAc,EAAKzD,MAAM5B,MAAMsF,OAAM,SAAAjB,GAAI,OAClB,IAArBA,EAAKjE,eAEPA,aAAa,GANjB,EAqBEyB,QAAU,SAACL,GACT,IAAM+D,EAAU,CACdtF,GAAIC,cACJC,MAAOqB,EACPpB,aAAa,GAGf,EAAKmB,UAAS,SAAAsB,GAAS,MAAK,CAC1B7C,MAAM,GAAD,mBACA6C,EAAU7C,OADV,gBAEEuF,UA/Bb,EAoCErC,WAAa,SAACN,GACZ,EAAKrB,UAAS,SAAAsB,GAAS,MACrB,CACE7C,MAAO6C,EAAU7C,MAAMoE,QAAO,SAAAC,GAAI,OAAIA,EAAKpE,KAAO2C,UAvC1D,EA2CE4C,mBAAqB,SAAC5C,GACpB,EAAKrB,UAAS,SAAAsB,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMsE,KAAI,SAACD,GAC1B,OAAIA,EAAKpE,KAAO2C,EACPyB,EAGF,2BACFA,GADL,IAEEjE,aAAciE,EAAKjE,qBAKzB,EAAKqF,qBAzDT,EA4DEN,YAAc,WACZ,EAAK5D,UAAS,SAAAsB,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMsE,KAAI,SAAAD,GAAI,kCAC1BA,GAD0B,IAE7BjE,aAAcyC,EAAUwC,kBAE1BA,cAAexC,EAAUwC,kBAlE/B,EAsEEI,kBAAoB,WAClB,EAAKlE,UAAS,SAAAsB,GAAS,MAAK,CAC1BwC,aAAcxC,EAAU7C,MAAMsF,OAAM,SAAAjB,GAAI,OACjB,IAArBA,EAAKjE,oBAzEb,EA8EE4E,eAAiB,WACf,EAAKzD,UAAS,SAAAsB,GAAS,MACrB,CACE7C,MAAO6C,EAAU7C,MAAMoE,QAAO,SAAAC,GAAI,OAAyB,IAArBA,EAAKjE,oBAjFnD,EAqFEsF,YAAc,SAACC,GACb,IAAIC,EAAU,EAQd,OANA,EAAK1E,MAAMlB,MAAM6F,SAAQ,SAACxB,GACpBA,EAAKjE,cAAgBuF,IACvBC,GAAW,MAIRA,GA9FX,EAiGE5C,WAAa,SAACJ,EAAQkD,GACpB,EAAKvE,UAAS,SAAAsB,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMsE,KAAI,SAACD,GAC1B,OAAIA,EAAKpE,KAAO2C,EACPyB,EAGF,2BACFA,GADL,IAEElE,MAAO2F,YA1GjB,kEAUI,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,YAE/CJ,GACFhE,KAAKR,SAAL,eAAmBwE,MAbzB,2CAkBIG,aAAaE,QAAQ,UAAWJ,KAAKK,UAAUtE,KAAKb,UAlBxD,+BAgHY,IAAD,OACDoF,EAAqBvE,KAAK2D,aAAa3D,KAAKb,MAAMd,aAClDmG,EAAwBxE,KAAK2D,YAAY3D,KAAKb,MAAMd,aACpDoG,EAAezE,KAAKb,MAAMlB,MAAMyG,OAEtC,OACE,6BAASzE,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CACEH,QAASE,KAAKF,WAIlB,6BAASG,UAAU,QACjB,kBAAC,EAAD,CAAqBmD,YAAapD,KAAKoD,cACvC,kBAAC,IAAD,CACEuB,KAAK,IACLC,OAAQ,gBAAGlC,EAAH,EAAGA,SAAH,OACN,kBAAC,EAAD,CACEzB,WAAY,EAAKA,WACjByB,SAAUA,EACVvB,WAAY,EAAKA,WACjBlD,MAAO,EAAKkB,MAAMlB,MAClBuD,aAAc,EAAKiC,2BAKxBgB,GAEC,4BAAQxE,UAAU,UAChB,kBAAC,EAAD,CACE+C,YAAauB,EACbtB,eAAgBjD,KAAKiD,eACrBC,eAAgBsB,UAnJhC,GAA6BrE,IAAMC,WCKpByE,MAVf,WACE,OACE,6BAAS5E,UAAU,WACjB,kBAAC,IAAD,CAAe6E,SAAS,oBACtB,kBAAC,EAAD,CAAS7G,MAAO8G,OCHxBC,IAASJ,OACP,kBAAC,EAAD,MACAK,SAASC,eAAe,W","file":"static/js/main.acde4236.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nexport const todos = [\n  {\n    id: uuidv4(),\n    title: 'Not completed1',\n    isCompleted: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'Completed',\n    isCompleted: true,\n  },\n  {\n    id: uuidv4(),\n    title: 'Completed',\n    isCompleted: true,\n  },\n  {\n    id: uuidv4(),\n    title: 'Not completed2',\n    isCompleted: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'Not completed3',\n    isCompleted: false,\n  },\n];\n","import PropTypes from 'prop-types';\n\nexport const TodoShapes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n};\n\nexport const TodoAppShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n};\n\nexport const AddFormShapes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport const TodosFilterShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport const TodoMenuShapes = {\n  activeTasks: PropTypes.number.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completedTasks: PropTypes.number.isRequired,\n};\n\nexport const CompleteAllCheckboxShapes = {\n  completeAll: PropTypes.func.isRequired,\n};\n\nexport const TodoListShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { AddFormShapes } from '../../Shapes/Shapes';\n\nexport class AddForm extends React.Component {\n  state = {}\n\n  onChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      taskTitle: value.replace(/^[\\s]+|\\s{2,}|\\s+$/g, ''),\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.taskTitle) {\n      this.props.addTodo(this.state.taskTitle);\n      event.target.reset();\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onChange}\n        />\n      </form>\n    );\n  }\n}\n\nAddForm.propTypes = AddFormShapes;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { TodoShapes } from '../../Shapes/Shapes';\n\nexport class TodoItem extends React.Component {\n  state ={\n    isEdit: false,\n    editedTitle: this.props.title,\n    editId: null,\n    tempTitle: this.props.title,\n  }\n\n  inputFocus = React.createRef();\n\n  componentDidUpdate() {\n    if (this.inputFocus) {\n      this.inputFocus.current.focus();\n    }\n  }\n\n  onDoubleClick = (event) => {\n    const taskId = event.target.id;\n\n    this.setState(prevState => ({\n      isEdit: !prevState.isEdit,\n      editId: taskId,\n      tempTitle: prevState.editingTitle,\n    }));\n  }\n\n  onBlurInput = () => {\n    const { editId, editedTitle } = this.state;\n\n    this.props.changeTodo(editId, editedTitle);\n    this.setState(prevState => ({\n      editingTitle: prevState.tempTitle,\n      isEdit: false,\n    }));\n  }\n\n  editingTitle = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      editedTitle: value.replace(/^[\\s]+|\\s{2,}|\\s+$/g, ''),\n    });\n  }\n\n  onKeyPressed = (event) => {\n    const { editId, editedTitle } = this.state;\n    const { deleteTodo } = this.props;\n\n    if (event.keyCode === 13) {\n      if (!editedTitle || editedTitle.trim() === '') {\n        deleteTodo(editId);\n      }\n\n      this.props.changeTodo(editId, editedTitle);\n      this.onBlurInput();\n    }\n\n    if (event.keyCode === 27) {\n      this.onBlurInput();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      id,\n      isCompleted,\n      deleteTodo,\n      completeTodo,\n    } = this.props;\n\n    const { editedTitle } = this.state;\n\n    return (\n      <>\n        <li\n          className={classnames({\n            completed: isCompleted, editing: this.state.isEdit,\n          })}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              onChange={() => completeTodo(id)}\n              checked={isCompleted}\n            />\n            <label\n              id={id}\n              onDoubleClick={this.onDoubleClick}\n              htmlFor={`todo-${id}`}\n            >\n              {title}\n            </label>\n            <button\n              onClick={() => deleteTodo(id)}\n              type=\"button\"\n              className=\"destroy\"\n              id={id}\n            />\n          </div>\n          <input\n            value={editedTitle}\n            onBlur={this.onBlurInput}\n            onChange={this.editingTitle}\n            onKeyUp={this.onKeyPressed}\n            type=\"text\"\n            className=\"edit\"\n            id={id}\n            ref={this.inputFocus}\n          />\n        </li>\n      </>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoShapes.isRequired;\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { TodosFilterShapes } from '../../Shapes/Shapes';\n\nexport const TodosFilter = ({\n  todos,\n  deleteTodo,\n  completeTodo,\n  pathname,\n  changeTodo,\n}) => {\n  const isCompleted = pathname !== '/active';\n\n  const filteredTodos = todos.filter(todo => todo.isCompleted === isCompleted);\n\n  return (\n    <>\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          deleteTodo={deleteTodo}\n          title={todo.title}\n          id={todo.id}\n          changeTodo={changeTodo}\n          completeTodo={completeTodo}\n          isCompleted={todo.isCompleted}\n        />\n      ))}\n    </>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterShapes;\n","import React from 'react';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nimport { TodoListShapes } from '../../Shapes/Shapes';\n\nexport const TodoList = ({\n  todos,\n  deleteTodo,\n  completeTodo,\n  location,\n  changeTodo,\n}) => {\n  const { pathname } = location;\n\n  return (\n    <ul className=\"todo-list\">\n      {pathname === '/'\n        ? todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            changeTodo={changeTodo}\n            deleteTodo={deleteTodo}\n            title={todo.title}\n            id={todo.id}\n            completeTodo={completeTodo}\n            isCompleted={todo.isCompleted}\n          />\n        ))\n        : (\n          <TodosFilter\n            todos={todos}\n            deleteTodo={deleteTodo}\n            completeTodo={completeTodo}\n            changeTodo={changeTodo}\n            pathname={pathname}\n          />\n        )\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShapes;\n","import React from 'react';\nimport {\n  NavLink,\n} from 'react-router-dom';\n\nexport const NavFiltersLink = () => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink exact to=\"/\" activeClassName=\"selected\">All</NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/active\" activeClassName=\"selected\">Active</NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/completed\" activeClassName=\"selected\">Completed</NavLink>\n    </li>\n  </ul>\n);\n","import React from 'react';\nimport { NavFiltersLink } from '../NavFiltersLink/NavFiltersLink';\nimport { TodoMenuShapes } from '../../Shapes/Shapes';\n\nexport const TodoMenu = ({ activeTasks, clearCompleted, completedTasks }) => (\n  <>\n    <span className=\"todo-count\">\n      {`${activeTasks} items left`}\n    </span>\n\n    <NavFiltersLink />\n    {!!completedTasks\n      && (\n        <button\n          onClick={clearCompleted}\n          type=\"button\"\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      )\n    }\n  </>\n);\n\nTodoMenu.propTypes = TodoMenuShapes;\n","import React from 'react';\nimport { CompleteAllCheckboxShapes } from '../../Shapes/Shapes';\n\nexport const CompleteAllCheckbox = ({ completeAll }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={completeAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </>\n);\n\nCompleteAllCheckbox.propTypes = CompleteAllCheckboxShapes;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoAppShapes } from '../../Shapes/Shapes';\nimport { AddForm } from '../AddForm/AddForm';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoMenu } from '../TodoMenu/TodoMenu';\nimport { CompleteAllCheckbox }\n  from '../CompleteAllCheckbox/CompleteAllCheckbox';\n\nexport class TodoApp extends React.Component {\n  state = {\n    todos: [],\n    allCompleted: this.props.todos.every(todo => (\n      todo.isCompleted === true\n    )),\n    isCompleted: true,\n  }\n\n  componentDidMount() {\n    const localState = JSON.parse(localStorage.getItem('todoApp'));\n\n    if (localState) {\n      this.setState({ ...localState });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todoApp', JSON.stringify(this.state));\n  }\n\n  addTodo = (taskTitle) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: taskTitle,\n      isCompleted: false,\n    };\n\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        { ...newTodo },\n      ],\n    }));\n  }\n\n  deleteTodo = (taskId) => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.filter(todo => todo.id !== taskId),\n      }));\n  }\n\n  changeCompletement = (taskId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== taskId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        };\n      }),\n    }));\n\n    this.checkCompletement();\n  }\n\n  completeAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        isCompleted: !prevState.allCompleted,\n      })),\n      allCompleted: !prevState.allCompleted,\n    }));\n  }\n\n  checkCompletement = () => {\n    this.setState(prevState => ({\n      allCompleted: prevState.todos.every(todo => (\n        todo.isCompleted === true\n      )),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.filter(todo => todo.isCompleted !== true),\n      }));\n  }\n\n  taskCounter = (isComplited) => {\n    let counter = 0;\n\n    this.state.todos.forEach((todo) => {\n      if (todo.isCompleted === isComplited) {\n        counter += 1;\n      }\n    });\n\n    return counter;\n  }\n\n  changeTodo = (taskId, newTitle) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== taskId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }),\n    }));\n  }\n\n  render() {\n    const activeTaskQuantity = this.taskCounter(!this.state.isCompleted);\n    const completedTaskQuantity = this.taskCounter(this.state.isCompleted);\n    const taskQuantity = this.state.todos.length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddForm\n            addTodo={this.addTodo}\n          />\n        </header>\n\n        <section className=\"main\">\n          <CompleteAllCheckbox completeAll={this.completeAll} />\n          <Route\n            path=\"/\"\n            render={({ location }) => (\n              <TodoList\n                changeTodo={this.changeTodo}\n                location={location}\n                deleteTodo={this.deleteTodo}\n                todos={this.state.todos}\n                completeTodo={this.changeCompletement}\n              />\n            )}\n          />\n        </section>\n        {!!taskQuantity\n          && (\n            <footer className=\"footer\">\n              <TodoMenu\n                activeTasks={activeTaskQuantity}\n                clearCompleted={this.clearCompleted}\n                completedTasks={completedTaskQuantity}\n              />\n            </footer>\n          )\n        }\n      </section>\n    );\n  }\n}\n\nTodoApp.propTypes = TodoAppShapes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { todos as todosFromServer } from './api/api';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <BrowserRouter basename=\"/react_todo-app/\">\n        <TodoApp todos={todosFromServer} />\n      </BrowserRouter>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}