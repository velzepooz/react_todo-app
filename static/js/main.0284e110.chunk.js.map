{"version":3,"sources":["api/api.js","Shapes/Shapes.js","components/AddForm/AddForm.js","components/TodoItem/TodoItem.js","components/TodosFilter/TodosFilter.js","components/TodoList/TodoList.js","components/NavFiltersLink/NavFiltersLink.js","components/TodoMenu/TodoMenu.js","components/CompleteAllCheckbox/CompleteAllCheckbox.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["todos","id","uuidv4","title","isCompleted","TodoShapes","PropTypes","string","isRequired","bool","AddForm","arrayOf","shape","func","number","pathname","search","hash","onChange","onSubmit","event","className","placeholder","target","value","TodoItem","state","isEdit","editedTitle","props","editId","tempTitle","inputFocus","React","createRef","onDoubleClick","taskId","setState","prevState","editingTitle","onBlurInput","changeTodo","replace","onKeyPressed","deleteTodo","keyCode","trim","this","current","focus","completeTodo","classnames","completed","editing","type","checked","htmlFor","onClick","onBlur","onKeyUp","ref","Component","TodosFilter","filteredTodos","filter","todo","map","key","TodoList","location","NavFiltersLink","exact","to","activeClassName","TodoMenu","activeTasks","clearCompleted","completedTasks","CompleteAllCheckbox","completeAll","TodoApp","allCompleted","every","createTodo","taskTitle","addTodo","preventDefault","newTodo","reset","changeCompletement","checkCompletement","taskCounter","isComplited","counter","forEach","newTitle","activeTaskQuantity","completedTaskQuantity","taskQuantity","length","path","render","App","basename","todosFromServer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0284e110.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nexport const todos = [\n  {\n    id: uuidv4(),\n    title: 'Not completed1',\n    isCompleted: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'Completed',\n    isCompleted: true,\n  },\n  {\n    id: uuidv4(),\n    title: 'Completed',\n    isCompleted: true,\n  },\n  {\n    id: uuidv4(),\n    title: 'Not completed2',\n    isCompleted: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'Not completed3',\n    isCompleted: false,\n  },\n];\n","import PropTypes from 'prop-types';\n\nexport const TodoShapes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n};\n\nexport const TodoAppShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n};\n\nexport const AddFormShapes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport const TodosFilterShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport const TodoMenuShapes = {\n  activeTasks: PropTypes.number.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completedTasks: PropTypes.number.isRequired,\n};\n\nexport const CompleteAllCheckboxShapes = {\n  completeAll: PropTypes.func.isRequired,\n};\n\nexport const TodoListShapes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    TodoShapes,\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport { AddFormShapes } from '../../Shapes/Shapes';\n\nexport const AddForm = ({ onChange, onSubmit }) => (\n  <form onSubmit={event => onSubmit(event)}>\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      onChange={event => onChange(event.target.value)}\n    />\n  </form>\n);\n\nAddForm.propTypes = AddFormShapes;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { TodoShapes } from '../../Shapes/Shapes';\n\nexport class TodoItem extends React.Component {\n  state ={\n    isEdit: false,\n    editedTitle: this.props.title,\n    editId: null,\n    tempTitle: this.props.title,\n  }\n\n  inputFocus = React.createRef();\n\n  componentDidUpdate() {\n    if (this.inputFocus) {\n      this.inputFocus.current.focus();\n    }\n  }\n\n  onDoubleClick = (event) => {\n    const taskId = event.target.id;\n\n    this.setState(prevState => ({\n      isEdit: !prevState.isEdit,\n      editId: taskId,\n      tempTitle: prevState.editingTitle,\n    }));\n  }\n\n  onBlurInput = () => {\n    const { editId, editedTitle } = this.state;\n\n    this.props.changeTodo(editId, editedTitle);\n    this.setState(prevState => ({\n      editingTitle: prevState.tempTitle,\n      isEdit: false,\n    }));\n  }\n\n  editingTitle = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      editedTitle: value.replace(/^[\\s]+|\\s{2,}|\\s+$/g, ''),\n    });\n  }\n\n  onKeyPressed = (event) => {\n    const { editId, editedTitle } = this.state;\n    const { deleteTodo } = this.props;\n\n    if (event.keyCode === 13) {\n      if (!editedTitle || editedTitle.trim() === '') {\n        deleteTodo(editId);\n      }\n\n      this.props.changeTodo(editId, editedTitle);\n      this.onBlurInput();\n    }\n\n    if (event.keyCode === 27) {\n      this.onBlurInput();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      id,\n      isCompleted,\n      deleteTodo,\n      completeTodo,\n    } = this.props;\n\n    const { editedTitle } = this.state;\n\n    return (\n      <>\n        <li\n          className={classnames({\n            completed: isCompleted, editing: this.state.isEdit,\n          })}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              onChange={() => completeTodo(id)}\n              checked={isCompleted}\n            />\n            <label\n              id={id}\n              onDoubleClick={this.onDoubleClick}\n              htmlFor={`todo-${id}`}\n            >\n              {title}\n            </label>\n            <button\n              onClick={() => deleteTodo(id)}\n              type=\"button\"\n              className=\"destroy\"\n              id={id}\n            />\n          </div>\n          <input\n            value={editedTitle}\n            onBlur={this.onBlurInput}\n            onChange={this.editingTitle}\n            onKeyUp={this.onKeyPressed}\n            type=\"text\"\n            className=\"edit\"\n            id={id}\n            ref={this.inputFocus}\n          />\n        </li>\n      </>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoShapes.isRequired;\n","import React from 'react';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nimport { TodosFilterShapes } from '../../Shapes/Shapes';\n\nexport const TodosFilter = ({ todos, deleteTodo, completeTodo, pathname }) => {\n  const isCompleted = pathname !== '/active';\n\n  const filteredTodos = todos.filter(todo => todo.isCompleted === isCompleted);\n\n  return (\n    <>\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          deleteTodo={deleteTodo}\n          title={todo.title}\n          id={todo.id}\n          completeTodo={completeTodo}\n          isCompleted={todo.isCompleted}\n        />\n      ))}\n    </>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterShapes;\n","import React from 'react';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nimport { TodoListShapes } from '../../Shapes/Shapes';\n\nexport const TodoList = ({\n  todos,\n  deleteTodo,\n  completeTodo,\n  location,\n  changeTodo,\n}) => {\n  const { pathname } = location;\n\n  return (\n    <ul className=\"todo-list\">\n      {pathname === '/'\n        ? todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            changeTodo={changeTodo}\n            deleteTodo={deleteTodo}\n            title={todo.title}\n            id={todo.id}\n            completeTodo={completeTodo}\n            isCompleted={todo.isCompleted}\n          />\n        ))\n        : (\n          <TodosFilter\n            todos={todos}\n            deleteTodo={deleteTodo}\n            completeTodo={completeTodo}\n            pathname={pathname}\n          />\n        )\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShapes;\n","import React from 'react';\nimport {\n  NavLink,\n} from 'react-router-dom';\n\nexport const NavFiltersLink = () => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink exact to=\"/\" activeClassName=\"selected\">All</NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/active\" activeClassName=\"selected\">Active</NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/completed\" activeClassName=\"selected\">Completed</NavLink>\n    </li>\n  </ul>\n);\n","import React from 'react';\n\nimport { NavFiltersLink } from '../NavFiltersLink/NavFiltersLink';\nimport { TodoMenuShapes } from '../../Shapes/Shapes';\n\nexport const TodoMenu = ({ activeTasks, clearCompleted, completedTasks }) => (\n  <>\n    <span className=\"todo-count\">\n      {`${activeTasks} items left`}\n    </span>\n\n    <NavFiltersLink />\n    {completedTasks\n      ? (\n        <button\n          onClick={clearCompleted}\n          type=\"button\"\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      )\n      : (\n        <></>\n      )\n    }\n\n  </>\n);\n\nTodoMenu.propTypes = TodoMenuShapes;\n","import React from 'react';\n\nimport { CompleteAllCheckboxShapes } from '../../Shapes/Shapes';\n\nexport const CompleteAllCheckbox = ({ completeAll }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={completeAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </>\n);\n\nCompleteAllCheckbox.propTypes = CompleteAllCheckboxShapes;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { TodoAppShapes } from '../../Shapes/Shapes';\n\nimport { AddForm } from '../AddForm/AddForm';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoMenu } from '../TodoMenu/TodoMenu';\nimport { CompleteAllCheckbox }\n  from '../CompleteAllCheckbox/CompleteAllCheckbox';\n\nexport class TodoApp extends React.Component {\n  state = {\n    todos: [...this.props.todos],\n    allCompleted: this.props.todos.every(todo => (\n      todo.isCompleted === true\n    )),\n    isCompleted: true,\n  }\n\n  createTodo = (value) => {\n    this.setState({\n      taskTitle: value,\n    });\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n\n    const newTodo = {\n      id: uuidv4(),\n      title: this.state.taskTitle,\n      isCompleted: false,\n    };\n\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        { ...newTodo },\n      ],\n    }));\n\n    event.target.reset();\n  }\n\n  deleteTodo = (taskId) => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.filter(todo => todo.id !== taskId),\n      }));\n  }\n\n  changeCompletement = (taskId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== taskId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        };\n      }),\n    }));\n\n    this.checkCompletement();\n  }\n\n  completeAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        isCompleted: !prevState.allCompleted,\n      })),\n      allCompleted: !prevState.allCompleted,\n    }));\n  }\n\n  checkCompletement = () => {\n    this.setState(prevState => ({\n      allCompleted: prevState.todos.every(todo => (\n        todo.isCompleted === true\n      )),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => (\n      {\n        todos: prevState.todos.filter(todo => todo.isCompleted !== true),\n      }));\n  }\n\n  taskCounter = (isComplited) => {\n    let counter = 0;\n\n    this.state.todos.forEach((todo) => {\n      if (todo.isCompleted === isComplited) {\n        counter += 1;\n      }\n    });\n\n    return counter;\n  }\n\n  changeTodo = (taskId, newTitle) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== taskId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }),\n    }));\n  }\n\n  render() {\n    const activeTaskQuantity = this.taskCounter(!this.state.isCompleted);\n    const completedTaskQuantity = this.taskCounter(this.state.isCompleted);\n    const taskQuantity = this.state.todos.length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddForm\n            onChange={this.createTodo}\n            onSubmit={this.addTodo}\n          />\n        </header>\n\n        <section className=\"main\">\n          <CompleteAllCheckbox completeAll={this.completeAll} />\n          <Route\n            path=\"/\"\n            render={({ location }) => (\n              <TodoList\n                changeTodo={this.changeTodo}\n                location={location}\n                deleteTodo={this.deleteTodo}\n                todos={this.state.todos}\n                completeTodo={this.changeCompletement}\n              />\n            )}\n          />\n        </section>\n        {taskQuantity\n          ? (\n            <footer className=\"footer\">\n              <TodoMenu\n                activeTasks={activeTaskQuantity}\n                clearCompleted={this.clearCompleted}\n                completedTasks={completedTaskQuantity}\n              />\n            </footer>\n          )\n          : (<></>)\n        }\n      </section>\n    );\n  }\n}\n\nTodoApp.propTypes = TodoAppShapes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { todos as todosFromServer } from './api/api';\n\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <BrowserRouter basename=\"/react_todo-app/\">\n        <TodoApp todos={todosFromServer} />\n      </BrowserRouter>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}